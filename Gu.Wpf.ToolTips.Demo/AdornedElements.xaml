<UserControl x:Class="Gu.Wpf.ToolTips.Demo.AdornedElements"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:demo="clr-namespace:Gu.Wpf.ToolTips.Demo"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:toolTips="clr-namespace:Gu.Wpf.ToolTips;assembly=Gu.Wpf.ToolTips"
             d:DataContext="{d:DesignInstance demo:ViewModel}"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="BaseStyle" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="200" />
            <Setter Property="Margin" Value="20" />
        </Style>

        <Style x:Key="ToolTipStyle"
               BasedOn="{StaticResource BaseStyle}"
               TargetType="{x:Type Button}">
            <Setter Property="toolTips:TouchToolTipService.IsVisible" Value="True" />
            <Setter Property="toolTips:TouchToolTipService.ToolTip">
                <Setter.Value>
                    <toolTips:TouchToolTip d:DataContext="{d:DesignInstance toolTips:BindingProxy}">
                        <StackPanel>
                            <ToggleButton Height="20" Content="Toggle" />
                            <TextBlock Text="{Binding ActualHeight, ElementName=Button, StringFormat='Height: {0} (ElementName)'}" />
                            <TextBlock Text="{Binding AdornedElement.ActualWidth, StringFormat='Width: {0}'}" />
                            <TextBlock Text="{Binding DataContext.Value, StringFormat='From vm: {0}'}" />
                        </StackPanel>
                    </toolTips:TouchToolTip>
                </Setter.Value>
            </Setter>

            <!--
                <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                <Setter Property="reactive:TouchToolTipService.IsVisible" Value="True" />
                </Trigger>
                </Style.Triggers>
            -->
        </Style>

        <Style x:Key="TouchToolTipStyle"
               BasedOn="{StaticResource BaseStyle}"
               TargetType="{x:Type Button}"
               x:Shared="False">
            <Setter Property="toolTips:TouchToolTipService.IsVisible" Value="True" />
            <Setter Property="toolTips:TouchToolTipService.ToolTip">
                <Setter.Value>
                    <ToolTip>
                        <StackPanel>
                            <ToggleButton Height="20" Content="Toggle" />
                            <TextBlock Text="{Binding ActualHeight, ElementName=Button, StringFormat='Height: {0} (ElementName)'}" />
                            <TextBlock Text="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Button}}, StringFormat='Width: {0} (RelativeSource={RelativeSource AncestorType={x:Type Button}})'}" />
                            <TextBlock Text="{Binding Condition1.Name, StringFormat='From vm: {0}'}" />
                        </StackPanel>
                    </ToolTip>
                </Setter.Value>
            </Setter>

            <Setter Property="toolTips:TouchToolTipService.OverlayTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Background="Transparent"
                                BorderBrush="Teal"
                                BorderThickness="2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <AdornerDecorator>
        <StackPanel>
            <Button x:Name="Button"
                    IsEnabled="False"
                    Style="{StaticResource TouchToolTipStyle}">
                <StackPanel>
                    <TextBlock Text="Explicit style, custom overlay (always visible)" />
                    <TextBlock Text="Tooltip bound to command condition" />
                </StackPanel>
            </Button>
            <Button IsEnabled="False" Style="{StaticResource TouchToolTipStyle}">
                <StackPanel>
                    <TextBlock Text="Explicit style, custom overlay (always visible)" />
                    <TextBlock Text="Tooltip bound to command condition (copy)" />
                </StackPanel>
            </Button>
            <Button IsEnabled="False" Style="{StaticResource ToolTipStyle}">
                <StackPanel>
                    <TextBlock Text="Explicit style (always visible)" />
                    <TextBlock Text="TouchToolTip" />
                </StackPanel>
            </Button>

            <Button x:Name="StandardButton" Style="{StaticResource BaseStyle}">
                <StackPanel>
                    <TextBlock Text="Ordinary button" />
                    <TextBlock Text="Standard tooltip" />
                </StackPanel>
                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock Text="{Binding ActualHeight, ElementName=Button, StringFormat='Height: {0} (ElementName)'}" />
                            <TextBlock Text="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Button}}, StringFormat='Width: {0} (RelativeSource={RelativeSource AncestorType={x:Type Button}})'}" />
                            <TextBlock Text="{Binding Condition1.Name, StringFormat='From vm: {0}'}" />
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>

            <TextBlock Width="150"
                       Padding="0,10,20,0"
                       Text="Text with TouchTooltip">
                <toolTips:TouchToolTipService.ToolTip>
                    <toolTips:TouchToolTip>Tooltip text</toolTips:TouchToolTip>
                </toolTips:TouchToolTipService.ToolTip>
            </TextBlock>
        </StackPanel>
    </AdornerDecorator>
</UserControl>
